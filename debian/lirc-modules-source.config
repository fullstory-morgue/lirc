#!/bin/sh -e
set_debconf_it87 ()
{
	if [ "$LIRC_IT87_CFLAGS" != "UNCONFIGURED" ];then
		if expr "$LIRC_IT87_CFLAGS" : '.*LIRC_IT87_DIGIMATRIX' \
				> /dev/null; then
			db_set $package/serial_type "DigiMatrix"
        else
            db_set $package/serial_type "Standard"
        fi
    fi

}

set_debconf_parallel ()
{
	# Parallel configuration
	if [ "$LIRC_PARALLEL_PORT" != "UNCONFIGURED" ];then
		db_set $package/parallel_port "$LIRC_PARALLEL_PORT"
	fi
	if [ "$LIRC_PARALLEL_IRQ" != "UNCONFIGURED" ];then
		db_set $package/parallel_irq "$LIRC_PARALLEL_IRQ"
	fi
	if [ "$LIRC_PARALLEL_TIMER" != "UNCONFIGURED" ];then
		db_set $package/parallel_timer "$LIRC_PARALLEL_TIMER"
	fi
}

set_debconf_serial ()
{
	# Serial configuration
	if [ "$LIRC_SERIAL_PORT" != "UNCONFIGURED" ];then
		db_set $package/serial_port "$LIRC_SERIAL_PORT"
	fi
	if [ "$LIRC_SERIAL_IRQ" != "UNCONFIGURED" ];then
		db_set $package/serial_irq "$LIRC_SERIAL_IRQ"
	fi
	if [ "$LIRC_SERIAL_CFLAGS" != "UNCONFIGURED" ];then
		if expr "$LIRC_SERIAL_CFLAGS" : '.*LIRC_SERIAL_ANIMAX' \
				> /dev/null; then
			db_set $package/serial_type "ANIMAX"
		elif expr "$LIRC_SERIAL_CFLAGS" : '.*LIRC_SERIAL_IRDEO' \
				> /dev/null; then
			db_set $package/serial_type "IRDEO"
		else
			db_set $package/serial_type "Other"
		fi

		if expr "$LIRC_SERIAL_CFLAGS" : '.*LIRC_SERIAL_TRANSMITTER' \
				> /dev/null; then
			db_set $package/serial_transmitter "true"
		else
			db_set $package/serial_transmitter "false"
		fi
		if expr "$LIRC_SERIAL_CFLAGS" : '.*LIRC_SERIAL_SOFTCARRIER' \
				> /dev/null; then
			db_set $package/serial_softcarrier "true"
		else
			db_set $package/serial_softcarrier "false"
		fi
	fi
}

set_debconf_sir ()
{
	# SIR configuration
	if [ "$LIRC_SIR_PORT" != "UNCONFIGURED" ];then
		db_set $package/sir_port "$LIRC_SIR_PORT"
	fi
	if [ "$LIRC_SIR_IRQ" != "UNCONFIGURED" ];then
		db_set $package/sir_irq "$LIRC_SIR_IRQ"
	fi
	if [ "$LIRC_SIR_CFLAGS" != "UNCONFIGURED" ];then
		if expr "$LIRC_SIR_CFLAGS" : '.*LIRC_SIR_TEKRAM' \
				> /dev/null; then
			db_set $package/sir_type "TEKRAM"
		elif expr "$LIRC_SIR_CFLAGS" : '.*LIRC_SIR_ACTISYS_ACT200L' \
				> /dev/null; then
			db_set $package/sir_type "ACTISYS_ACT200L"
		else
			db_set $package/sir_type "Other"
		fi
	fi
}


informal_module_building ()
{
	db_input medium $package/do-build || true
	db_go || true
	db_get $package/do-build
	DO_BUILD=$RET
	while [ "$DO_BUILD" = "true" ]
	do
		db_input high $package/kernel-source || true
		db_go || true
		db_get $package/kernel-source || true
		KSRC="$RET"
		
		#if [ -f "$KSRC/Rules.make" ];then
		if [ -f "$KSRC/include/linux/version.h" ];then
			#This looks like a kernel source tree, we are done
			break
		fi
	
		db_fset $package/kernel-source-not-found seen false
		db_subst $package/kernel-source-not-found ksrc "$KSRC"
		db_input medium $package/kernel-source-not-found || true
	
		db_reset $package/kernel-source || true
	
		db_reset $package/do-build || true
		db_input medium $package/do-build || true
		db_go || true
	
		db_get $package/do-build
		DO_BUILD=$RET
	done
}

use_lirc_hints ()
{
	db_fset $package/drivers seen true
	db_get lirc/modules
	LIRC_MODULES=$RET
	if [ -z "$RET" ]; then
		db_set $package/drivers ""
		db_input medium $package/not_needed || true
	elif expr "$RET" : '.*_serial\>' > /dev/null; then
		db_set $package/drivers serial
		db_get lirc/port
		LIRC_SERIAL_PORT=$RET
		db_get lirc/irq
		LIRC_SERIAL_IRQ=$RET
		db_get lirc/cflags
		LIRC_SERIAL_CFLAGS=$RET

		set_debconf_serial
		db_fset $package/serial_type seen true
		db_fset $package/serial_transmitter seen true
		db_fset $package/serial_softcarrier seen true
		db_fset $package/serial_port seen true
		db_fset $package/serial_irq seen true

	elif expr "$RET" : '.*_sir\>' > /dev/null; then
		db_set $package/drivers sir
		db_get lirc/port
		LIRC_SIR_PORT=$RET
		db_get lirc/irq
		LIRC_SIR_IRQ=$RET
		db_get lirc/cflags
		LIRC_SIR_CFLAGS=$RET

		set_debconf_sir
		db_fset $package/sir_type seen true
		db_fset $package/sir_port seen true
		db_fset $package/sir_irq seen true

	elif expr "$RET" : '.*_parallel\>' > /dev/null; then
		db_set $package/drivers parallel
		db_get lirc/port
		LIRC_PARALLEL_PORT=$RET
		db_get lirc/irq
		LIRC_PARALLEL_IRQ=$RET
		db_get lirc/timer
		LIRC_PARALLEL_TIMER=$RET

		set_debconf_parallel

		db_fset $package/parallel_port seen true
		db_fset $package/parallel_irq seen true
		db_fset $package/parallel_timer seen true
	elif expr "$RET" : '.*_gpio\>' > /dev/null; then
		db_set $package/drivers gpio
	elif expr "$RET" : '.*_it87\>' > /dev/null; then
		db_set $package/drivers it87

        set_debconf_it87
        db_fset $package/it87_type seen true

	elif expr "$RET" : '.*_bt829\>' > /dev/null; then
		db_set $package/drivers bt829
	elif expr "$RET" : '.*_i2c\>' > /dev/null; then
		db_set $package/drivers i2c
	fi

	if [ -n "$LIRC_MODULES" ]; then
		db_input medium $package/what_next || true
	fi

	db_go
}

# Source debconf library.
. /usr/share/debconf/confmodule
db_version 2.0

package=lirc-modules-source

if [ -f /etc/lirc/$package.conf ]; then
	if sh -e /etc/lirc/$package.conf > /dev/null 2>&1 ; then
		. /etc/lirc/$package.conf
	else
		echo "/etc/lirc/$package.conf has syntax errors. IGNORED"
	fi
	# Drivers to build
	if [ "$LIRC_MODULES" != "UNCONFIGURED" ];then
		db_set $package/drivers "$LIRC_MODULES"
	fi
	if expr "$DRIVERS" : '.*\<it87\>' > /dev/null; then
		set_debconf_it87
	fi
	if expr "$DRIVERS" : '.*\<parallel\>' > /dev/null; then
		set_debconf_parallel
	fi
	if expr "$DRIVERS" : '.*\<serial\>' > /dev/null; then
		set_debconf_serial
	fi
	if expr "$DRIVERS" : '.*\<sir\>' > /dev/null; then
		set_debconf_sir
	fi
fi

db_fget lirc/reconfigure configured || RET=false
if $RET; then
	db_input medium $package/use_lirc_hints || true
	db_go || true
	db_get $package/use_lirc_hints
	if $RET; then
		use_lirc_hints
		informal_module_building
		exit 0
	fi
fi

db_input medium $package/drivers || true
db_go || true

db_get $package/drivers || true
DRIVERS=$RET

if expr "$DRIVERS" : '.*\<it87\>' > /dev/null
then
	db_input high $package/it87_type || true
	db_go || true
fi

if expr "$DRIVERS" : '.*\<parallel\>' > /dev/null
then
	db_input low $package/parallel_port || true
	db_input low $package/parallel_irq || true
	db_input low $package/parallel_timer || true
	db_go || true
fi

if expr "$DRIVERS" : '.*\<serial\>' > /dev/null
then
	db_input low $package/serial_type || true
	db_input low $package/serial_transmitter || true
	db_input low $package/serial_softcarrier || true
	db_input low $package/serial_port || true
	db_input low $package/serial_irq || true
	db_go || true
fi

if expr "$DRIVERS" : '.*\<sir\>' > /dev/null
then
	db_input high $package/sir_type || true
	db_input low $package/sir_port || true
	db_input low $package/sir_irq || true
	db_go || true
fi

db_input medium $package/what_next || true
db_go

informal_module_building
