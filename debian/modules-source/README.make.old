Building the LIRC kernel drivers.

In the Debian packaging of LIRC, I have put the kernel drivers
under /usr/src/lirc/. In order to build them, you should
change into the directory of whichever is most appropriate to
your card (see the list below), and use "make" from there.

The Makefiles assume that you are using a 2.4 kernel and that your current
kernel sources are in usr/src/linux; if they are not, redefine
KERNEL_LOCATION variable when running make:
	make KERNEL_LOCATION=/my/kernel/source/

The compilation in 2.2 kernels will be addressed in later versions of this
package, along with a better compilation method. The parallel driver doesn't
seem to compile on latest 2.4 kernels, I haven't had the time to address
this either, if anyone compiles it, please drop me a note.

If you want to change any default values, like ports, irqs, ... edit the
config.h file in this directory.

After you run make on the directory you'll get a .o file, which is the
driver you need for lirc to support your hardware, copy it to the directory
/lib/modules/`uname -r`/misc/ making it previously if it doesn't exist. Then
you'll have to update the dependencies of the modules running either
"update-modules" or "depmod -a".


This are the drivers you need for some of the supported hardware:

Hardware				Driver
=============================		=============
Custom parallel-port receiver		lirc_parallel
Serial-port driver			lirc_serial
Serial InfraRed (IRDA)			lirc_sir

Compilation of drivers to support for TV cards remotes may need some extra
explanation, lets see...

Hauppauge and PixelView	cards need lirc_dev and lirc_i2c, so you must run
make on both this directories and copy both this drivers to
/lib/modules/`uname -r`/misc/

On the other side... FlyVideo98, Avermedia, MiRO and many other TV-cards
need lirc_dev and lirc_gpio, so you must run make on this two directories
and copy both this drivers to /lib/modules/`uname -r`/misc/


You should of course also have a look at any README files in the
subdirectories of the drivers you want to compile.
